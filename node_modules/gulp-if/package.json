{
  "name": "gulp-if",
  "description": "Conditionally run a task",
  "version": "0.0.5",
  "homepage": "https://github.com/robrich/gulp-if",
  "repository": {
    "type": "git",
    "url": "git://github.com/robrich/gulp-if.git"
  },
  "author": {
    "name": "Rob Richardson",
    "url": "http://robrich.org/"
  },
  "main": "./index.js",
  "keywords": [
    "gulpplugin",
    "conditional",
    "if"
  ],
  "dependencies": {
    "through": "~2.3.4",
    "gulp-match": "~0.0.1"
  },
  "devDependencies": {
    "jshint": "~2.4.1",
    "mocha": "~1.17.0",
    "should": "~3.0.1"
  },
  "scripts": {
    "test": "mocha && jshint ./*.js && jshint ./test/*.js"
  },
  "engines": {
    "node": ">= 0.10.0"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/robrich/gulp-if/raw/master/LICENSE"
    }
  ],
  "readme": "![status](https://secure.travis-ci.org/robrich/gulp-if.png?branch=master)\r\n\r\ngulp-if\r\n=======\r\n\r\nUse boolean expressions or functions to conditionally control the flow of streams.\r\n\r\n\r\n## Usage\r\n\r\n```javascript\r\nvar gulpif = require('gulp-if');\r\nvar uglify = require('gulp-uglify');\r\n\r\nvar condition = true; // TODO: add business logic\r\n\r\ngulp.task('task', function() {\r\n  gulp.src('./src/*.js')\r\n    .pipe(gulpif(condition, uglify()))\r\n    .pipe(gulp.dest('./dist/'));\r\n});\r\n```\r\n\r\n## API\r\n\r\n### gulpif(condition, stream [, branch])\r\n\r\ngulp-if will pipe data to `stream` appropriately whenever `condition` is satisfied.\r\n\r\nTo visualize stream flow, see the following diagram:\r\n\r\n![](img/flow.png)\r\n\r\nIf `condition` is unsatisfied, then data from `stream A` will pass onto `Stream D`.\r\n\r\nHowever, if `condition` is satisfied, then data from `stream A` will pipe to `stream B`.\r\n\r\nIf `branch` is true, `stream B` will not pass data to `stream D`. This is useful if another stream, say `stream C`, is connected to `stream B`. Otherwise, `stream B` will pass data to `stream D` whenever `branch` is false.\r\n\r\n#### Parameters\r\n\r\n##### condition\r\n\r\nType: `boolean` or [`stat`](http://nodejs.org/api/fs.html#fs_class_fs_stats) object or `function` that takes in a vinyl file and returns a boolean or `RegularExpression` that works on the `file.path`\r\n\r\nThe condition parameter is any of the conditions supported by [gulp-match](https://github.com/robrich/gulp-match).  The `file.path` is passed into `gulp-match`.\r\n\r\nIf a function is given, then the function is passed a vinyl `file`. The function should return a `boolean`.\r\n\r\n##### stream\r\n\r\nStream for gulp-if to pipe data into. Useful when given a gulp-plugin.\r\n\r\n##### branch\r\n\r\nType: `boolean`\r\n\r\nDefault: `false`\r\n\r\n`branch` controls the flow behavior of whether gulp-if should pipe `stream` back to the main stream (i.e. branching flow).\r\n\r\nIf `true`, then gulp-if **will not** pipe `stream` back to the main stream. Otherwise, gulp-if will pipe `stream` back to the main stream.\r\n\r\n\r\nLICENSE\r\n-------\r\n\r\n(MIT License)\r\n\r\nCopyright (c) 2014 [Richardson & Sons, LLC](http://richardsonandsons.com/)\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining\r\na copy of this software and associated documentation files (the\r\n\"Software\"), to deal in the Software without restriction, including\r\nwithout limitation the rights to use, copy, modify, merge, publish,\r\ndistribute, sublicense, and/or sell copies of the Software, and to\r\npermit persons to whom the Software is furnished to do so, subject to\r\nthe following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be\r\nincluded in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/robrich/gulp-if/issues"
  },
  "_id": "gulp-if@0.0.5",
  "dist": {
    "shasum": "d20b5a6c244d40269f6d7bd5ce77dd2737011923"
  },
  "_from": "gulp-if@",
  "_resolved": "https://registry.npmjs.org/gulp-if/-/gulp-if-0.0.5.tgz"
}
